local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local SkUI = {}
SkUI.__index = SkUI

local function Create(class, props)
    local obj = Instance.new(class)
    for i, v in pairs(props) do
        obj[i] = v
    end
    return obj
end

local function Roundify(obj, rad)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, rad)
    corner.Parent = obj
end

function SkUI:CreateWindow(title)
    local ui = setmetatable({}, SkUI)

    local Screen = Create("ScreenGui", {
        Name = "SkUI_Library",
        ResetOnSpawn = false,
        Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    })

    local Holder = Create("Frame", {
        Size = UDim2.new(0, 550, 0, 367),
        Position = UDim2.new(0.5, -275, 0, -60),
        BackgroundColor3 = Color3.fromRGB(22, 22, 22),
        BorderSizePixel = 0,
        Visible = true,
        Parent = Screen
    })
    Roundify(Holder, 8)

    local Header = Create("Frame", {
        Size = UDim2.new(1, 0, 0, 35),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderSizePixel = 0,
        Parent = Holder
    })

    local Title = Create("TextLabel", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = title or "SkUI",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        Parent = Header
    })

    local TabsBackground = Create("Frame", {
        Size = UDim2.new(1, 0, 0, 35),
        Position = UDim2.new(0, 0, 0, 35),
        BackgroundColor3 = Color3.fromRGB(25, 25, 25),
        BorderSizePixel = 0,
        Parent = Holder
    })

    local TabsScroll = Create("ScrollingFrame", {
        Size = UDim2.new(1, 0, 0, 35),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1,
        BorderSizePixel = 0,
        ScrollBarThickness = 3,
        CanvasSize = UDim2.new(0, 0, 0, 0),
        AutomaticCanvasSize = Enum.AutomaticSize.X,
        ScrollingDirection = Enum.ScrollingDirection.X,
        Parent = TabsBackground
    })

    local TabsLayout = Instance.new("UIListLayout")
    TabsLayout.FillDirection = Enum.FillDirection.Horizontal
    TabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabsLayout.Padding = UDim.new(0, 6)
    TabsLayout.Parent = TabsScroll

    local TabsFolder = Create("Folder", { Parent = TabsScroll })

    local Pages = {}
    local TabButtons = {}

    function ui:Create(tabname)
        local tab = {}

        local Button = Create("TextButton", {
            Size = UDim2.new(0, 130, 1, 0),
            BackgroundColor3 = Color3.fromRGB(40, 40, 40),
            Text = tabname,
            Font = Enum.Font.GothamBold,
            TextSize = 14,
            TextColor3 = Color3.fromRGB(255, 255, 255),
            Parent = TabsScroll
        })
        Roundify(Button, 6)

        local Page = Create("Frame", {
            Size = UDim2.new(1, 0, 1, -70),
            Position = UDim2.new(0, 0, 0, 70),
            BackgroundTransparency = 1,
            Visible = false,
            Parent = Holder
        })

        local function makeScroll(posX)
            local scroll = Create("ScrollingFrame", {
                Size = UDim2.new(0.5, -10, 1, 0),
                Position = posX,
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                ScrollBarThickness = 3,
                AutomaticCanvasSize = Enum.AutomaticSize.Y,
                ScrollingDirection = Enum.ScrollingDirection.Y,
                CanvasSize = UDim2.new(0, 0, 0, 0),
                LayoutOrder = 1,
                Parent = Page
            })
            local layout = Instance.new("UIListLayout")
            layout.Padding = UDim.new(0, 6)
            layout.SortOrder = Enum.SortOrder.LayoutOrder
            layout.Parent = scroll
            return scroll
        end

        local LeftScroll = makeScroll(UDim2.new(0, 8, 0, 5))
        local RightScroll = makeScroll(UDim2.new(0.5, 13, 0, 5))

        local function AddElement(side, obj)
            obj.Size = UDim2.new(1, -10, 0, 38)
            local parent = (side == "Left") and LeftScroll or RightScroll
            obj.Parent = parent
        end

function tab:AddToggle(side, text, default, callback)
    local Toggle = Create("TextButton", {
        BackgroundColor3 = Color3.fromRGB(45, 45, 45),
        Text = "",
        Font = Enum.Font.Gotham,
        TextSize = 14,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextXAlignment = Enum.TextXAlignment.Left
    })
    Roundify(Toggle, 6)

    local label = Instance.new("TextLabel", Toggle)
    label.BackgroundTransparency = 1
    label.Position = UDim2.new(0, 10, 0, 0)
    label.Size = UDim2.new(1, -40, 1, 0)
    label.Font = Enum.Font.Gotham
    label.Text = text
    label.TextSize = 14
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextXAlignment = Enum.TextXAlignment.Left

    local icon = Instance.new("Frame", Toggle)
    icon.AnchorPoint = Vector2.new(1, 0.5)
    icon.Position = UDim2.new(1, -8, 0.5, 0)
    icon.Size = UDim2.new(0, 20, 0, 20)
    icon.BackgroundColor3 = default and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(80, 80, 80)
    icon.BorderSizePixel = 0
    icon.ZIndex = 2
    Roundify(icon, 10)

    local tick = Instance.new("TextLabel", icon)
    tick.Size = UDim2.new(1, 0, 1, 0)
    tick.BackgroundTransparency = 1
    tick.Text = "‚úì"
    tick.Font = Enum.Font.GothamBold
    tick.TextSize = 14
    tick.TextColor3 = Color3.fromRGB(255, 255, 255)
    tick.TextTransparency = default and 0 or 1
    tick.ZIndex = 3

    local state = default or false

    Toggle.MouseButton1Click:Connect(function()
        state = not state
        icon.BackgroundColor3 = state and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(80, 80, 80)
        tick.TextTransparency = state and 0 or 1
        callback(state)
    end)

    AddElement(side, Toggle)
end
       function tab:AddTextLabel(side, text)
    local parent = (side == "Left") and LeftScroll or RightScroll
    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(0, 250, 0, 30)
    Label.BackgroundTransparency = 1
    Label.Text = text
    Label.Font = Enum.Font.Gotham
    Label.TextSize = 16
    Label.TextColor3 = Color3.fromRGB(200, 200, 200)
    Label.TextXAlignment = Enum.TextXAlignment.Center
    Label.TextYAlignment = Enum.TextYAlignment.Center
    Label.AnchorPoint = Vector2.new(0.5, 0)
    Label.Position = UDim2.new(0.5, 0, 0, 0)
    Label.Parent = parent
end
function tab:AddButton(side, text, callback)
    local parent = (side == "Left") and LeftScroll or RightScroll

    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(1, -10, 0, 30)
    Button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    Button.Font = Enum.Font.Gotham
    Button.TextSize = 14
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.Text = text
    Button.ClipsDescendants = true
    Button.Parent = parent

    Roundify(Button, 6)

    local Emoji = Instance.new("TextLabel")
    Emoji.Text = "üëÜüèª"
    Emoji.Size = UDim2.new(0, 20, 0, 20)
    Emoji.Position = UDim2.new(1, -24, 0.5, -10)
    Emoji.BackgroundTransparency = 1
    Emoji.TextSize = 18
    Emoji.Font = Enum.Font.Gotham
    Emoji.TextColor3 = Color3.fromRGB(255, 255, 255)
    Emoji.Parent = Button

    Button.MouseButton1Click:Connect(callback)
end        
function tab:AddDropdown(side, text, list, callback)
    local parent = (side == "Left") and LeftScroll or RightScroll

    local Container = Instance.new("Frame")
    Container.Size = UDim2.new(1, -10, 0, 30)
    Container.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Container.ClipsDescendants = false
    Container.BackgroundTransparency = 0
    Container.Parent = parent

    local UICorner = Instance.new("UICorner", Container)
    UICorner.CornerRadius = UDim.new(0, 6)

    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(1, 0, 1, 0)
    Button.BackgroundTransparency = 1
    Button.Font = Enum.Font.Gotham
    Button.TextSize = 14
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.Text = text .. " ‚ñº"
    Button.Parent = Container

    local DropdownFrame = Instance.new("Frame")
    DropdownFrame.Size = UDim2.new(1, 0, 0, 0)
    DropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    DropdownFrame.BorderSizePixel = 0
    DropdownFrame.Visible = false
    DropdownFrame.ClipsDescendants = true
    DropdownFrame.ZIndex = 2
    DropdownFrame.Parent = Container

    local UIList = Instance.new("UIListLayout", DropdownFrame)
    UIList.Padding = UDim.new(0, 2)
    UIList.SortOrder = Enum.SortOrder.LayoutOrder

    for i, item in ipairs(list) do
        local Opt = Instance.new("TextButton")
        Opt.Size = UDim2.new(1, -4, 0, 28)
        Opt.Position = UDim2.new(0, 2, 0, (i - 1) * 30)
        Opt.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        Opt.Text = item
        Opt.Font = Enum.Font.Gotham
        Opt.TextSize = 13
        Opt.TextColor3 = Color3.fromRGB(255, 255, 255)
        Opt.TextTransparency = 0
        Opt.AutoButtonColor = true
        Opt.Parent = DropdownFrame

        Opt.MouseButton1Click:Connect(function()
            DropdownFrame.Visible = false
            Button.Text = text .. ": " .. item .. " ‚ñº"
            callback(item)
        end)
    end

    local open = false
    Button.MouseButton1Click:Connect(function()
        open = not open
        DropdownFrame.Visible = open
        DropdownFrame.Size = open and UDim2.new(1, 0, 0, math.min(#list * 30, 150)) or UDim2.new(1, 0, 0, 0)
        Button.Text = open and (text .. " ‚ñ≤") or (text .. " ‚ñº")
    end)
end
function tab:AddTextbox(side, text, placeholder, callback)
    local Box = Instance.new("Frame")
    Box.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Box.Size = UDim2.new(1, -10, 0, 38)
    Box.ClipsDescendants = true

    local UICorner = Instance.new("UICorner", Box)
    UICorner.CornerRadius = UDim.new(0, 6)

    local Label = Instance.new("TextLabel", Box)
    Label.Size = UDim2.new(1, -10, 0, 15)
    Label.Position = UDim2.new(0, 10, 0, 2)
    Label.BackgroundTransparency = 1
    Label.Text = text
    Label.Font = Enum.Font.Gotham
    Label.TextSize = 12
    Label.TextColor3 = Color3.fromRGB(200, 200, 200)
    Label.TextXAlignment = Enum.TextXAlignment.Left

    local Input = Instance.new("TextBox", Box)
    Input.Size = UDim2.new(1, -20, 0, 18)
    Input.Position = UDim2.new(0, 10, 0, 18)
    Input.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    Input.Text = ""
    Input.PlaceholderText = placeholder or ""
    Input.Font = Enum.Font.Gotham
    Input.TextSize = 13
    Input.TextColor3 = Color3.fromRGB(255, 255, 255)
    Input.ClearTextOnFocus = false
    Input.TextXAlignment = Enum.TextXAlignment.Left

    local corner2 = Instance.new("UICorner", Input)
    corner2.CornerRadius = UDim.new(0, 4)

    Input.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            callback(Input.Text)
        end
    end)

    AddElement(side, Box)
end
function tab:AddSlider(side, text, min, max, default, callback)
    local parent = (side == "Left") and LeftScroll or RightScroll
    local val = default or min

    local Container = Instance.new("Frame")
    Container.Size = UDim2.new(1, -10, 0, 40)
    Container.BackgroundTransparency = 1
    Container.Parent = parent

    local Label = Instance.new("TextLabel", Container)
    Label.Size = UDim2.new(1, 0, 0, 14)
    Label.Position = UDim2.new(0, 0, 0, 0)
    Label.BackgroundTransparency = 1
    Label.Font = Enum.Font.Gotham
    Label.TextSize = 14
    Label.TextColor3 = Color3.new(1, 1, 1)
    Label.Text = text .. ": " .. val

    local SliderBar = Instance.new("Frame", Container)
    SliderBar.Size = UDim2.new(1, 0, 0, 10)
    SliderBar.Position = UDim2.new(0, 0, 0, 24)
    SliderBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    SliderBar.BorderSizePixel = 0
    SliderBar.ClipsDescendants = true
    local UICorner = Instance.new("UICorner", SliderBar)
    UICorner.CornerRadius = UDim.new(0, 4)

    local Fill = Instance.new("Frame", SliderBar)
    Fill.Size = UDim2.new((val - min) / (max - min), 0, 1, 0)
    Fill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    Fill.BorderSizePixel = 0
    Fill.ZIndex = 2
    local FillCorner = Instance.new("UICorner", Fill)
    FillCorner.CornerRadius = UDim.new(0, 4)
    Fill.Name = "Fill"
    Fill.Parent = SliderBar

    local Dragging = false
    local function Update(input)
        local absPos = SliderBar.AbsolutePosition.X
        local absSize = SliderBar.AbsoluteSize.X
        local mouseX = input.Position.X
        local percent = math.clamp((mouseX - absPos) / absSize, 0, 1)
        val = math.floor(min + (max - min) * percent + 0.5)
        Fill.Size = UDim2.new(percent, 0, 1, 0)
        Label.Text = text .. ": " .. val
        callback(val)
    end

    SliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            Dragging = true
            Update(input)
        end
    end)

    SliderBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            Dragging = false
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if Dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            Update(input)
        end
    end)
end
function tab:Line(side)
    local parent = (side == "Left") and LeftScroll or RightScroll

    local Line = Instance.new("Frame")
    Line.Size = UDim2.new(1, -10, 0, 2)
    Line.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Line.BackgroundTransparency = 0.4
    Line.BorderSizePixel = 0
    Line.Parent = parent
end        
        Button.MouseButton1Click:Connect(function()
            for _, p in pairs(Pages) do
                p.Visible = false
            end
            Page.Visible = true
        end)

        Page.Visible = #Pages == 0
        table.insert(Pages, Page)
        return tab
    end

    UserInputService.InputBegan:Connect(function(input, gp)
        if input.KeyCode == Enum.KeyCode.LeftControl and not gp then
            Holder.Visible = not Holder.Visible
        end
    end)

    return ui
end

return setmetatable({}, SkUI)
