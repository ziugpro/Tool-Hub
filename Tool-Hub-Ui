local SkUI = {} SkUI.__index = SkUI

local PlayerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

function SkUI:CreateWindow(title) local self = setmetatable({}, SkUI)

local UI = Instance.new("ScreenGui")
UI.Name = "SkUI"
UI.ResetOnSpawn = false
UI.IgnoreGuiInset = true
UI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
UI.Parent = PlayerGui

local Main = Instance.new("Frame")
Main.Name = "Main"
Main.Size = UDim2.new(0, 550, 0, 370)
Main.Position = UDim2.new(0.5, -275, 0.5, -185)
Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Main.BorderSizePixel = 0
Main.Parent = UI

local TabsHolder = Instance.new("ScrollingFrame")
TabsHolder.Name = "TabsHolder"
TabsHolder.Size = UDim2.new(1, 0, 0, 40)
TabsHolder.BackgroundTransparency = 1
TabsHolder.BorderSizePixel = 0
TabsHolder.CanvasSize = UDim2.new(0, 0, 0, 40)
TabsHolder.ScrollBarThickness = 2
TabsHolder.ScrollingDirection = Enum.ScrollingDirection.X
TabsHolder.Parent = Main

local Pages = Instance.new("Frame")
Pages.Name = "Pages"
Pages.Size = UDim2.new(1, 0, 1, -40)
Pages.Position = UDim2.new(0, 0, 0, 40)
Pages.BackgroundTransparency = 1
Pages.Parent = Main

self.UI = UI
self.Main = Main
self.TabsHolder = TabsHolder
self.Pages = Pages
self.Tabs = {}

return self

end

function SkUI:Create(tabName) local Tab = {} Tab.Name = tabName

local TabButton = Instance.new("TextButton")
TabButton.Size = UDim2.new(0, 100, 1, 0)
TabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TabButton.TextColor3 = Color3.new(1, 1, 1)
TabButton.Text = tabName
TabButton.Parent = self.TabsHolder

local Page = Instance.new("Frame")
Page.Name = tabName .. "_Page"
Page.Size = UDim2.new(1, 0, 1, 0)
Page.Visible = false
Page.BackgroundTransparency = 1
Page.Parent = self.Pages

local Left = Instance.new("ScrollingFrame")
Left.Name = "Left"
Left.Size = UDim2.new(0.5, -5, 1, 0)
Left.Position = UDim2.new(0, 0, 0, 0)
Left.BackgroundTransparency = 1
Left.BorderSizePixel = 0
Left.ScrollBarThickness = 2
Left.ScrollingDirection = Enum.ScrollingDirection.Y
Left.CanvasSize = UDim2.new(0, 0, 0, 0)
Left.Parent = Page

local Right = Instance.new("ScrollingFrame")
Right.Name = "Right"
Right.Size = UDim2.new(0.5, -5, 1, 0)
Right.Position = UDim2.new(0.5, 5, 0, 0)
Right.BackgroundTransparency = 1
Right.BorderSizePixel = 0
Right.ScrollBarThickness = 2
Right.ScrollingDirection = Enum.ScrollingDirection.Y
Right.CanvasSize = UDim2.new(0, 0, 0, 0)
Right.Parent = Page

Tab.Left = Left
Tab.Right = Right
Tab.Page = Page

TabButton.MouseButton1Click:Connect(function()
    for _, v in pairs(self.Pages:GetChildren()) do
        v.Visible = false
    end
    Page.Visible = true
end)

function Tab:AddToggle(pos, name, default, callback)
    local container = Tab[pos]
    local frame = Instance.new("TextButton")
    frame.Size = UDim2.new(1, -10, 0, 30)
    frame.BackgroundColor3 = Color3.fromRGB(60, 60, 255)
    frame.Text = "  " .. tostring(name)
    frame.TextColor3 = Color3.new(1, 1, 1)
    frame.Font = Enum.Font.GothamBold
    frame.TextXAlignment = Enum.TextXAlignment.Left
    frame.Parent = container

    local tick = Instance.new("TextLabel")
    tick.Size = UDim2.new(0, 30, 1, 0)
    tick.Position = UDim2.new(1, -30, 0, 0)
    tick.BackgroundTransparency = 1
    tick.Text = default and "✔" or ""
    tick.TextColor3 = Color3.new(1, 1, 1)
    tick.Font = Enum.Font.GothamBold
    tick.TextScaled = true
    tick.Parent = frame

    local state = default
    frame.MouseButton1Click:Connect(function()
        state = not state
        tick.Text = state and "✔" or ""
        if callback then callback(state) end
    end)
end

function Tab:AddButton(pos, name, callback)
    local container = Tab[pos]
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -10, 0, 30)
    btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    btn.Text = tostring(name)
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.GothamBold
    btn.Parent = container
    btn.MouseButton1Click:Connect(function()
        if callback then callback() end
    end)
end

function Tab:AddTextLabel(pos, text)
    local container = Tab[pos]
    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(1, -10, 0, 30)
    lbl.BackgroundTransparency = 1
    lbl.Text = tostring(text)
    lbl.TextColor3 = Color3.new(1, 1, 1)
    lbl.Font = Enum.Font.GothamBold
    lbl.TextScaled = true
    lbl.Parent = container
end

function Tab:AddDropdown(pos, name, list, callback)
    local container = Tab[pos]
    local dropdown = Instance.new("TextButton")
    dropdown.Size = UDim2.new(1, -10, 0, 30)
    dropdown.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    dropdown.Text = tostring(name)
    dropdown.TextColor3 = Color3.new(1, 1, 1)
    dropdown.Font = Enum.Font.GothamBold
    dropdown.Parent = container
    dropdown.MouseButton1Click:Connect(function()
        for _, v in ipairs(list) do
            dropdown.Text = v
            if callback then callback(v) end
            wait(0.2)
        end
    end)
end

function Tab:AddSlider(pos, name, min, max, default, callback)
    local container = Tab[pos]
    local slider = Instance.new("TextButton")
    slider.Size = UDim2.new(1, -10, 0, 30)
    slider.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
    slider.Text = name .. ": " .. tostring(default)
    slider.TextColor3 = Color3.new(1, 1, 1)
    slider.Font = Enum.Font.GothamBold
    slider.Parent = container
    local value = default
    slider.MouseButton1Click:Connect(function()
        value = value + 1
        if value > max then value = min end
        slider.Text = name .. ": " .. tostring(value)
        if callback then callback(value) end
    end)
end

return Tab

end

return setmetatable({}, SkUI)

